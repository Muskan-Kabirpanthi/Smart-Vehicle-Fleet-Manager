{"version":3,"sources":["component/firebase/fireConfig.js","component/ContextProvider/StateProvider.js","component/dashboard_common/HeaderLayout.js","component/dashboard_common/FooterLayout.js","component/Logs/SpeedLog.js","component/Logs/FuelLog.js","component/Logs/FuelRefillLog.js","component/Logs/MaintainenceLog.js","component/Logs/OverSpeedLog.js","component/dashboard/Dashboard.js","component/Login/home.js","App.js","serviceWorker.js","component/ContextProvider/Reducer.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","performance","auth","db","firestore","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Title","Typography","Header","Layout","HeaderLayout","user","theme","className","style","padding","color","level","Tooltip","title","ghost","icon","PoweroffOutlined","onClick","fireConfig","signOut","float","margin","fontSize","marginLeft","marginRight","displayName","email","Footer","FooterLayout","date","Date","getFullYear","background","textAlign","rel","type","href","React","Component","SpeedLog","ReactFC","fcRoot","FusionCharts","Widgets","FusionTheme","charts","lastItem","useState","speedData","setSpeedData","loading","setLoading","lastSpeed","useEffect","setTimeout","collection","doc","orderBy","get","then","snapshot","speed_value","forEach","push","data","catch","error","console","log","undefined","length","Object","entries","key","dataSource","chart","captionpadding","origw","origh","gaugeouterradius","gaugestartangle","gaugeendangle","showvalue","valuefontsize","majortmnumber","majortmthickness","majortmheight","minortmheight","minortmthickness","minortmnumber","showgaugeborder","colorrange","minvalue","maxvalue","code","dials","dial","bgcolor","basewidth","annotations","groups","items","id","text","x","y","fontsize","defaultSorted","dataField","order","SearchBar","Search","ClearSearchButton","MyExportCSV","props","onExport","width","height","dataFormat","bootstrap4","keyField","columns","search","searchProps","csvProps","pagination","paginationFactory","baseProps","animation","FuelLog","Charts","fuelData","setFuelData","lastId","lastFuel","lastTimestamp","fuel_value","keys","map","fuelLevelChartConfigs","caption","subCaption","xAxisName","yAxisName","numberSuffix","label","FuelRefillLog","fuelRefillData","setFuelRefillData","lastFuelRefill","fuleRefill_value","fuelRefillChartConfigs","MaintainenceLog","maintainenceData","setMaintainenceData","lastMaintainance","maintainance_value","maintainenceSource","subcaption","showvalues","numvisibleplot","plottooltext","categories","category","dataset","OverSpeedLog","overSpeedData","setOverSpeedData","lastOverSpeed","overSpeed_value","overspeedingSource","Dashboard","Content","Sider","SubMenu","Menu","vehicleNAME","setVehicleNAME","vehicleID","setVehicleID","vehicleRegNumber","setVehicleRegNumber","moment","toString","setDate","cost","setCost","collapseState","setCollapseState","submitHandler","event","preventDefault","target","minHeight","collapsible","collapsed","onCollapse","defaultSelectedKeys","defaultOpenKeys","mode","Item","PieChartOutlined","DesktopOutlined","AppstoreAddOutlined","Link","window","location","orientation","md","onSubmit","noValidate","name","onChange","group","validate","success","required","outline","set","vehicleId","vehicleName","amount","timestamp","speed","alert","utils","DateFnsUtils","disableToolbar","fullWidth","variant","format","val","KeyboardButtonProps","add","cose","Alert","elevation","Home","openSuccess","setOpenSuccess","openError","setOpenError","openSignInError","setOpenSignInError","handleClose","reason","dark","expand","fixed","scrolling","transparent","tag","delay","src","alt","marginTop","gradient","document","querySelector","password","signInWithEmailAndPassword","err","sendPasswordResetEmail","Snackbar","open","autoHideDuration","onClose","severity","App","dispatch","onAuthStateChanged","authUser","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f46db74e.chunk.js","sourcesContent":["// import * as firebase from \"firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/performance\";\n\nconst fireConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"smart-vehicle-fleet-manager.firebaseapp.com\",\n  databaseURL: \"https://smart-vehicle-fleet-manager.firebaseio.com\",\n  projectId: \"smart-vehicle-fleet-manager\",\n  storageBucket: \"smart-vehicle-fleet-manager.appspot.com\",\n  messagingSenderId: \"35283794292\",\n  appId: \"1:35283794292:web:8f57bd332e3993aa295421\",\n  measurementId: \"G-2RDWV3B4X4\",\n};\n\nfirebase.initializeApp(fireConfig);\n\n// initialize performance monitoring and get a reference to the service\nexport const perf = firebase.performance();\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport default firebase;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\n// prepare the datalayer\nexport const StateContext = createContext();\n\n// wrap our app and provide the datalayer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// pull information from the datalayer\nexport const useStateValue = () => useContext(StateContext);\n","import React from \"react\";\nimport fireConfig from \"../firebase/fireConfig\";\nimport { Layout, Button, Typography } from \"antd\";\nimport { PoweroffOutlined } from \"@ant-design/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useStateValue } from \"../ContextProvider/StateProvider\";\n\nconst { Title } = Typography;\nconst { Header } = Layout;\n\nfunction HeaderLayout() {\n  const [{ user }] = useStateValue();\n\n  // logout\n  const logout = () => {\n    fireConfig.auth().signOut();\n  };\n\n  return (\n    <Layout>\n      <Header\n        theme=\"dark\"\n        className=\"site-layout-background\"\n        style={{ padding: 0 }}\n      >\n        <Title style={{ color: \"#EAF0F1\", padding: 15 }} level={3}>\n          Smart Vehicle Fleet Manager\n          <Tooltip title=\"Logout\">\n            <Button\n              ghost\n              icon={<PoweroffOutlined />}\n              onClick={logout}\n              style={{\n                float: \"right\",\n                margin: \"auto 20px auto 20px\",\n              }}\n            />\n          </Tooltip>\n          <span\n            style={{\n              float: \"right\",\n              fontSize: \"20px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {user?.displayName || user?.email}\n          </span>\n        </Title>\n      </Header>\n    </Layout>\n  );\n}\n\nexport default HeaderLayout;\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst { Footer } = Layout;\n\nclass FooterLayout extends React.Component {\n  render() {\n    const date = new Date().getFullYear();\n    return (\n      <Footer\n        style={{ background: \"#282c34\", color: \"white\", textAlign: \"center\" }}\n      >\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"//code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\"\n        />\n        Made with <i className=\"icon ion-heart fa-2x text-danger\"></i> by India.\n        Copyright ©{date} reseverd by Smart Vehicle Fleet Manager.\n      </Footer>\n    );\n  }\n}\n\nexport default FooterLayout;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport \"./SpeedLog.css\";\n\nfunction SpeedLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\n\n  // Resolves charts dependancy\n  charts(FusionCharts);\n\n  const [speedData, setSpeedData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  var lastItem;\n  var lastSpeed = 0;\n\n  useEffect(() => {\n    setTimeout(() => {\n      db.collection(\"vehicle\")\n        .doc(\"speed_sensor\")\n        .collection(\"speed\")\n        .orderBy(\"id\", \"asc\")\n        .get()\n        .then((snapshot) => {\n          const speed_value = [];\n          snapshot.forEach((doc) => {\n            speed_value.push(doc.data());\n          });\n          setSpeedData(speed_value);\n          setLoading(true);\n        })\n        .catch((error) => console.log(error));\n    }, 2000);\n  }, []);\n\n  lastItem = speedData[speedData.length - 1];\n  if (lastItem !== undefined) {\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"speed\") {\n        lastSpeed = value;\n      }\n    });\n  }\n\n  lastItem = speedData[speedData.length - 1];\n  if (lastItem !== undefined) {\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"speed\") {\n        lastSpeed = value;\n      }\n    });\n  }\n\n  // config widget\n  const dataSource = {\n    chart: {\n      captionpadding: \"0\",\n      origw: \"320\",\n      origh: \"300\",\n      gaugeouterradius: \"115\",\n      gaugestartangle: \"270\",\n      gaugeendangle: \"-25\",\n      showvalue: \"1\",\n      valuefontsize: \"30\",\n      majortmnumber: \"13\",\n      majortmthickness: \"2\",\n      majortmheight: \"13\",\n      minortmheight: \"7\",\n      minortmthickness: \"1\",\n      minortmnumber: \"1\",\n      showgaugeborder: \"0\",\n      theme: \"fusion\",\n    },\n    colorrange: {\n      color: [\n        {\n          minvalue: \"0\",\n          maxvalue: \"85\",\n          code: \"#999999\",\n        },\n        {\n          minvalue: \"85\",\n          maxvalue: \"180\",\n          code: \"#F6F6F6\",\n        },\n      ],\n    },\n    dials: {\n      dial: [\n        {\n          value: lastSpeed,\n          bgcolor: \"#F20F2F\",\n          basewidth: \"8\",\n        },\n      ],\n    },\n    annotations: {\n      groups: [\n        {\n          items: [\n            {\n              type: \"text\",\n              id: \"text\",\n              text: \"kmph\",\n              x: \"$gaugeCenterX\",\n              y: \"$gaugeCenterY + 40\",\n              fontsize: \"20\",\n              color: \"#555555\",\n            },\n          ],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"SPEED\",\n      dataField: \"speed\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"speedlog\">\n      <div className=\"speedlog_widget\">\n        <ReactFusioncharts\n          type=\"angulargauge\"\n          width=\"50%\"\n          height=\"50%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n        />\n      </div>\n      <div className=\"speedlog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={speedData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"speedlog_btn\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SpeedLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./FuelLog.css\";\n\nfunction FuelLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [fuelData, setFuelData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  var lastItem = [];\n  var lastId = [];\n  var lastFuel = [];\n  var lastTimestamp = [];\n\n  useEffect(() => {\n    setTimeout(() => {\n      db.collection(\"vehicle\")\n        .doc(\"fuel_sensor\")\n        .collection(\"fuel\")\n        .orderBy(\"id\", \"asc\")\n        .get()\n        .then((snapshot) => {\n          const fuel_value = [];\n          snapshot.forEach((doc) => {\n            fuel_value.push(doc.data());\n          });\n          setFuelData(fuel_value);\n          setLoading(true);\n        })\n        .catch((error) => console.log(error));\n    }, 2000);\n  }, []);\n\n  // last record from data...\n  Object.keys(fuelData).map((key) => {\n    lastItem = fuelData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"amount\") {\n        lastFuel.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config fuel level chat\n  const fuelLevelChartConfigs = {\n    type: \"column2d\",\n    width: 500,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Vehicle Fuel level In [litre]\",\n        subCaption: \"In litres\",\n        xAxisName: \"Timestamp\",\n        yAxisName: \"Fuel (litre)\",\n        numberSuffix: \"Lt.\",\n        theme: \"fusion\",\n      },\n      data: [\n        {\n          label: lastTimestamp[lastTimestamp.length - 5],\n          value: lastFuel[lastFuel.length - 5],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 4],\n          value: lastFuel[lastFuel.length - 4],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 3],\n          value: lastFuel[lastFuel.length - 3],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 2],\n          value: lastFuel[lastFuel.length - 2],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 1],\n          value: lastFuel[lastFuel.length - 1],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"AMOUNT\",\n      dataField: \"amount\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelLog\">\n      <div className=\"fuelLog_chart\">\n        <ReactFC {...fuelLevelChartConfigs} />\n      </div>\n      <div className=\"fuelLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={fuelData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelLog_btn\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FuelLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./FuelRefillLog.css\";\n\nfunction FuelRefillLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [fuelRefillData, setFuelRefillData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  var lastItem = [];\n  var lastId = [];\n  var lastFuelRefill = [];\n  var lastTimestamp = [];\n\n  useEffect(() => {\n    setTimeout(() => {\n      db.collection(\"vehicle\")\n        .doc(\"fuel_refill_sensor\")\n        .collection(\"fuel_refill\")\n        .orderBy(\"id\", \"asc\")\n        .get()\n        .then((snapshot) => {\n          const fuleRefill_value = [];\n          snapshot.forEach((doc) => {\n            fuleRefill_value.push(doc.data());\n          });\n          setFuelRefillData(fuleRefill_value);\n          setLoading(true);\n        })\n        .catch((error) => console.log(error));\n    }, 2000);\n  }, []);\n\n  // last record from data...\n  Object.keys(fuelRefillData).map((key) => {\n    lastItem = fuelRefillData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"amount\") {\n        lastFuelRefill.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config fuel refill chart\n  const fuelRefillChartConfigs = {\n    type: \"column2d\",\n    width: 500,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Vehicle Fuel Refill In [litre]\",\n        subCaption: \"In litres\",\n        xAxisName: \"Timestamp\",\n        yAxisName: \"Fuel (litre)\",\n        numberSuffix: \"Lt.\",\n        theme: \"fusion\",\n      },\n      data: [\n        // {\n        //   label: lastTimestamp[lastTimestamp.length - 10],\n        //   value: lastFuelRefill[lastFuelRefill.length - 10],\n        // },\n        // {\n        //   label: lastTimestamp[lastTimestamp.length - 9],\n        //   value: lastFuelRefill[lastFuelRefill.length - 9],\n        // },\n        // {\n        //   label: lastTimestamp[lastTimestamp.length - 8],\n        //   value: lastFuelRefill[lastFuelRefill.length - 8],\n        // },\n        {\n          label: lastTimestamp[lastTimestamp.length - 7],\n          value: lastFuelRefill[lastFuelRefill.length - 7],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 6],\n          value: lastFuelRefill[lastFuelRefill.length - 6],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 5],\n          value: lastFuelRefill[lastFuelRefill.length - 5],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 4],\n          value: lastFuelRefill[lastFuelRefill.length - 4],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 3],\n          value: lastFuelRefill[lastFuelRefill.length - 3],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 2],\n          value: lastFuelRefill[lastFuelRefill.length - 2],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 1],\n          value: lastFuelRefill[lastFuelRefill.length - 1],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"AMOUNT\",\n      dataField: \"amount\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelRefillLog\">\n      <div className=\"fuelRefillLog_chart\">\n        <ReactFC {...fuelRefillChartConfigs} />\n      </div>\n      <div className=\"fuelRefillLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={fuelRefillData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelRefillLog_btn\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FuelRefillLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./MaintainanceLog.css\";\n\nfunction MaintainenceLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [maintainenceData, setMaintainenceData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  var lastItem = [];\n  var lastId = [];\n  var lastMaintainance = [];\n  var lastTimestamp = [];\n\n  useEffect(() => {\n    setTimeout(() => {\n      db.collection(\"vehicle\")\n        .doc(\"maintainence\")\n        .collection(\"data_records\")\n        .orderBy(\"id\", \"asc\")\n        .get()\n        .then((snapshot) => {\n          const maintainance_value = [];\n          snapshot.forEach((doc) => {\n            maintainance_value.push(doc.data());\n          });\n          setMaintainenceData(maintainance_value);\n          setLoading(true);\n        })\n        .catch((error) => console.log(error));\n    }, 2000);\n  }, []);\n\n  // last record from data...\n  Object.keys(maintainenceData).map((key) => {\n    lastItem = maintainenceData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"cost\") {\n        lastMaintainance.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config maintainence line with scrolling\n  Charts(FusionCharts);\n  const maintainenceSource = {\n    chart: {\n      caption: \"Vehicle Maintainance Instaces\",\n      subcaption: \"(As per recommended)\",\n      showvalues: \"0\",\n      numvisibleplot: \"12\",\n      plottooltext: \"<b>$dataValue</b> Speed of Vehicle at $label\",\n      theme: \"fusion\",\n    },\n    categories: [\n      {\n        category: [\n          {\n            label: lastTimestamp[lastTimestamp.length - 2],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 1],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      {\n        data: [\n          {\n            value: lastMaintainance[lastMaintainance.length - 2],\n          },\n          {\n            value: lastMaintainance[lastMaintainance.length - 1],\n          },\n        ],\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      text: \"COST\",\n      dataField: \"cost\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"maintainanceLog\">\n      <div className=\"maintainanceLog_chart\">\n        <ReactFusioncharts\n          type=\"scrollline2d\"\n          width=\"30%\"\n          height=\"40%\"\n          dataFormat=\"JSON\"\n          dataSource={maintainenceSource}\n        />\n      </div>\n      <div className=\"maintainanceLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={maintainenceData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"maintainanceLog_btn\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MaintainenceLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./OverSpeedLog.css\";\n\nfunction OverSpeedLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [overSpeedData, setOverSpeedData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  var lastItem = [];\n  var lastId = [];\n  var lastOverSpeed = [];\n  var lastTimestamp = [];\n\n  useEffect(() => {\n    setTimeout(() => {\n      db.collection(\"vehicle\")\n        .doc(\"overspeed_sensor\")\n        .collection(\"overspeed\")\n        .orderBy(\"id\", \"asc\")\n        .get()\n        .then((snapshot) => {\n          const overSpeed_value = [];\n          snapshot.forEach((doc) => {\n            overSpeed_value.push(doc.data());\n          });\n          setOverSpeedData(overSpeed_value);\n          setLoading(true);\n        })\n        .catch((error) => console.log(error));\n    }, 2000);\n  }, []);\n\n  // last record from data...\n  Object.keys(overSpeedData).map((key) => {\n    lastItem = overSpeedData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"speed\") {\n        lastOverSpeed.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config overspeed line with scrolling\n  Charts(FusionCharts);\n  const overspeedingSource = {\n    chart: {\n      caption: \"Vehicle OverSpeeding Instaces\",\n      subcaption: \"(As per recommended)\",\n      showvalues: \"0\",\n      numvisibleplot: \"10\",\n      plottooltext: \"<b>$dataValue</b> Speed of Vehicle at $label\",\n      theme: \"fusion\",\n    },\n    categories: [\n      {\n        category: [\n          {\n            label: lastTimestamp[lastTimestamp.length - 3],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 2],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 1],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      {\n        data: [\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 3],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 2],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 1],\n          },\n        ],\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      text: \"OVERSPEED\",\n      dataField: \"speed\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelRefillLog\">\n      <div className=\"fuelRefillLog_chart\">\n        <ReactFusioncharts\n          type=\"scrollline2d\"\n          width=\"32%\"\n          height=\"40%\"\n          dataFormat=\"JSON\"\n          dataSource={overspeedingSource}\n        />\n      </div>\n      <div className=\"fuelRefillLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={overSpeedData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelRefillLog_btn\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default OverSpeedLog;\n","import React, { useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport HeaderLayout from \"../dashboard_common/HeaderLayout\";\nimport FooterLayout from \"../dashboard_common/FooterLayout\";\nimport SpeedLog from \"../Logs/SpeedLog\";\nimport FuelLog from \"../Logs/FuelLog\";\nimport FuelRefillLog from \"../Logs/FuelRefillLog\";\nimport MaintainenceLog from \"../Logs/MaintainenceLog\";\nimport OverSpeedLog from \"../Logs/OverSpeedLog\";\nimport { Layout, Menu, Breadcrumb, Divider } from \"antd\";\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n} from \"mdbreact\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  AppstoreAddOutlined,\n} from \"@ant-design/icons\";\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport Link from \"@material-ui/core/Link\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport \"./Dashboard.css\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  // Layout and Menu\n  const { Content, Sider } = Layout;\n  const { SubMenu } = Menu;\n  const preventDefault = (event) => {\n    event.preventDefault();\n    window.location.href =\n      \"https://github.com/abhishekpatel946/Smart-Vehicle-Fleet-Manager/issues/new/choose\";\n  };\n\n  // vehicleId & vehicleName for addVehicle\n  const [vehicleNAME, setVehicleNAME] = useState(\"\");\n  const [vehicleID, setVehicleID] = useState(\"\");\n\n  // vehicleName, dateTime & cost for maintenace\n  const [vehicleRegNumber, setVehicleRegNumber] = useState(\"\");\n  const [date, setDate] = useState(moment().toString());\n  const [cost, setCost] = useState(\"\");\n\n  // set date\n  const onDateChange = (val) => {\n    setDate(val);\n  };\n\n  const [collapseState, setCollapseState] = useState(false);\n\n  const onCollapse = (collapsed) => {\n    setCollapseState({ collapsed });\n  };\n\n  // form onSubmit handler\n  const submitHandler = (event) => {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n  };\n\n  // form vehicleRegister submitHandler\n  const vehicleRegister = (event) => {\n    if (vehicleID && vehicleNAME) {\n      // check if the doc are already available in the DB... then just give the warning to the user!\n\n      // create a doc in DB with vehicleID and set it fields\n      db.collection(\"data\").doc(vehicleID).set({\n        vehicleId: vehicleID,\n        vehicleName: vehicleNAME,\n      });\n\n      // create a dummy collection for newly created vehicleID\n      db.collection(\"data\").doc(vehicleID).collection(\"fuel\").doc().set({\n        id: \"0\",\n        amount: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\").doc(vehicleID).collection(\"fuel_refill\").doc().set({\n        id: \"0\",\n        amount: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\")\n        .doc(vehicleID)\n        .collection(\"maintainance\")\n        .doc()\n        .set({\n          id: \"0\",\n          amount: \"0\",\n          timestamp: \"0\",\n        });\n      db.collection(\"data\").doc(vehicleID).collection(\"overspeed\").doc().set({\n        id: \"0\",\n        speed: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\").doc(vehicleID).collection(\"speed\").doc().set({\n        id: \"0\",\n        speed: \"0\",\n        timestamp: \"0\",\n      });\n\n      // success mgs for the all are right\n      alert(\"Vehicle added successfully..!!!\");\n\n      // set it to defualt to state\n      setVehicleNAME(\"\");\n      setVehicleID(\"\");\n    } else {\n      alert(\"Both the fields are mandatory!!!\");\n    }\n  };\n\n  // from vehicleMaintenace submitHandler\n  const addCost = (event) => {\n    // store maintainance-cost into database\n    db.collection(\"data\")\n      .doc(vehicleRegNumber)\n      .collection(\"maintainance\")\n      .add({\n        id: vehicleRegNumber,\n        cose: cost,\n        timestamp: date,\n      })\n      .then(function () {\n        // success mgs for the all are right\n        alert(\"Vehicle maintainance added successfully..!!!\");\n      })\n      .catch(function (error) {\n        console.error(\"Error writing maintainance module\", error);\n      });\n  };\n\n  // render() {\n  return (\n    <Layout>\n      {/* Header Section */}\n      <HeaderLayout className=\"header\" />\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider\n          collapsible\n          collapsed={collapseState.collapsed}\n          onCollapse={onCollapse}\n        >\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            defaultSelectedKeys={[\"stats\"]}\n            defaultOpenKeys={[\"track\"]}\n            mode=\"inline\"\n          >\n            <Menu.Item key=\"stats\" icon={<PieChartOutlined />}>\n              Stats\n            </Menu.Item>\n            <SubMenu key=\"track\" icon={<DesktopOutlined />} title=\"Track\">\n              <Menu.Item key=\"speed\">Speed</Menu.Item>\n              <Menu.Item key=\"fuel\">Fuel</Menu.Item>\n              <Menu.Item key=\"fuel_refill\">Fuel Refill</Menu.Item>\n              <Menu.Item key=\"overspeeding\">OverSpeeding</Menu.Item>\n              <Menu.Item key=\"maintainance\">Maintainance</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"addVehicle\" icon={<AppstoreAddOutlined />}>\n              Add Vehicle\n            </Menu.Item>\n            <Menu.Item key=\"addMaintainance\" icon={<AppstoreAddOutlined />}>\n              Add Maintainance\n            </Menu.Item>\n            <Menu.Item key=\"reportIssue\" icon={<ReportProblemOutlinedIcon />}>\n              <Link\n                href=\"https://github.com/abhishekpatel946/Smart-Vehicle-Fleet-Manager/issues/new/choose\"\n                onClick={preventDefault}\n              >\n                Report an issue\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n\n        {/* Breadcrum Naming */}\n        <Layout className=\"site-layout\">\n          <Content style={{ margin: \"0 16px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>User</Breadcrumb.Item>\n              <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\n            </Breadcrumb>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 560 }}\n            >\n              {/* Speed Section */}\n              <Divider orientation=\"left\">Speed area</Divider>\n              <MDBContainer>\n                <SpeedLog />\n              </MDBContainer>\n\n              {/* Fuel Section */}\n              <Divider orientation=\"left\">Fuel area</Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <FuelLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* OverSpeeding Section */}\n              <Divider orientation=\"left\">OverSpeeding area</Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <OverSpeedLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* Fuel Refill Section */}\n              <Divider orientation=\"left\">Fuel Refill area</Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <FuelRefillLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* Maintainence Section */}\n              <Divider orientation=\"left\">Maintainance area</Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <MaintainenceLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* addVehicle Section */}\n              <Divider orientation=\"left\">Add Vehicle</Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol md=\"6\">\n                    <form\n                      className=\"needs-validation\"\n                      onSubmit={submitHandler}\n                      noValidate\n                    >\n                      <p className=\"h5 text-center mb-4\">Register Vehicle</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          className=\"addVehicle_vehicleNAME\"\n                          name=\"vehicleNAME\"\n                          onChange={(event) =>\n                            setVehicleNAME(event.target.value)\n                          }\n                          value={vehicleNAME}\n                          label=\"Your vehicle name\"\n                          icon=\"car\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                        <MDBInput\n                          className=\"addVehicle_vehicleID\"\n                          name=\"vehicleID\"\n                          onChange={(event) => setVehicleID(event.target.value)}\n                          value={vehicleID}\n                          label=\"Your vechile reg. number\"\n                          icon=\"registered\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                      </div>\n                      <div className=\"text-center\">\n                        <MDBBtn outline type=\"submit\" onClick={vehicleRegister}>\n                          Register\n                          <MDBIcon className=\"ml-1\" />\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCol>\n                  <MDBCol md=\"6\">\n                    <form\n                      className=\"needs-validation\"\n                      onSubmit={submitHandler}\n                      noValidate\n                    >\n                      <p className=\"h5 text-center mb-4\">\n                        Register Maintainance\n                      </p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          className=\"addVehicle_vehicleNAME\"\n                          name=\"vehicleName\"\n                          onChange={(event) =>\n                            setVehicleRegNumber(event.target.value)\n                          }\n                          value={vehicleRegNumber}\n                          label=\"Your vehicle Reg number\"\n                          icon=\"registered\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                        <div>\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              disableToolbar\n                              fullWidth\n                              variant=\"inline\"\n                              format=\"dd/MM/yyyy\"\n                              margin=\"normal\"\n                              id=\"date-picker-inline\"\n                              label=\"DD/MM/YYYY\"\n                              value={date}\n                              onChange={onDateChange}\n                              KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                              }}\n                            />\n                          </MuiPickersUtilsProvider>\n                        </div>\n                        <MDBInput\n                          className=\"addVehicle_vehicleID\"\n                          name=\"cost\"\n                          onChange={(event) => setCost(event.target.value)}\n                          value={cost}\n                          label=\"Your mainatenace cost...\"\n                          icon=\"rupee-sign\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                      </div>\n                      <div className=\"text-center\">\n                        <MDBBtn outline type=\"submit\" onClick={addCost}>\n                          Add Cost\n                          <MDBIcon className=\"ml-1\" />\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n\n              {/* End */}\n            </div>\n          </Content>\n          <FooterLayout />\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n  // }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBMask,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBView,\n  MDBContainer,\n  MDBInput,\n  MDBAnimation,\n  MDBTypography,\n} from \"mdbreact\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./home.css\";\nimport fireConfig from \"../firebase/fireConfig\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Home() {\n  // snakbar state\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n  const [openSignInError, setOpenSignInError] = React.useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSuccess(false);\n    setOpenError(false);\n    setOpenSignInError(false);\n  };\n\n  // login\n  const login = () => {\n    const email = document.querySelector(\"#login_email\").value;\n    const password = document.querySelector(\"#login_password\").value;\n\n    fireConfig\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        // setOpenSuccess(true);\n        console.log(\"SignedIN succeed!!!\");\n      })\n      .catch((err) => {\n        setOpenSignInError(true);\n      });\n  };\n\n  // forgot password\n  const forgotPass = () => {\n    const email = document.querySelector(\"#login_email\").value;\n\n    fireConfig\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(function (user) {\n        setOpenSuccess(true);\n      })\n      .catch(function (err) {\n        setOpenError(true);\n      });\n  };\n\n  return (\n    <div id=\"apppage\">\n      <Router>\n        <div>\n          <MDBNavbar\n            color=\"primary-color\"\n            dark\n            expand=\"md\"\n            fixed=\"top\"\n            scrolling\n            transparent\n          >\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <MDBCol>\n                  <MDBTypography\n                    tag=\"h3\"\n                    variant=\"h3-responsive\"\n                    style={{ color: \"#EAF0F1\" }}\n                  >\n                    Smart Vehicle Fleet Manager\n                  </MDBTypography>\n                </MDBCol>\n              </MDBNavbarBrand>\n            </MDBContainer>\n          </MDBNavbar>\n        </div>\n      </Router>\n      <MDBView>\n        <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n          <MDBContainer>\n            <MDBRow>\n              <MDBAnimation type=\"fadeInLeft\" delay=\".3s\">\n                <img\n                  src=\"https://mdbootstrap.com/img/Mockups/Transparent/Small/admin-new.png\"\n                  alt=\"\"\n                  className=\"img-fluid\"\n                  style={{ padding: \"40px\", marginTop: \"200px\" }}\n                />\n              </MDBAnimation>\n            </MDBRow>\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBRow className=\"d-flex justify-content-center\">\n                  <h3 className=\"white-text mb-3 pt-3 font-weight-bold\">\n                    Log in\n                  </h3>\n                </MDBRow>\n                <form>\n                  <div className=\"white-text\">\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Type your email\"\n                      icon=\"envelope\"\n                      id=\"login_email\"\n                      group\n                      type=\"email\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Type your password\"\n                      icon=\"lock\"\n                      id=\"login_password\"\n                      group\n                      type=\"password\"\n                      validate\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn gradient=\"blue\" onClick={login}>\n                      Login\n                    </MDBBtn>\n                    <MDBBtn gradient=\"peach\" onClick={forgotPass}>\n                      Forgot Pass\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBMask>\n      </MDBView>\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          Please check your email for instructions on how to reset your\n          password...!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={openError} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Incorrect email, Please type correct email and hit the forgot\n          button...!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={openSignInError}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          Incorrect username and password. Please Try again...!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport { auth } from \"firebase\";\nimport Home from \"./component/Login/home\";\nimport { useStateValue } from \"./component/ContextProvider/StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const subscribe = () => {\n      auth().onAuthStateChanged((authUser) => {\n        if (authUser) {\n          // generate a unique userId for each user\n          // console.log(`user id ==>> ${authUser.uid}`);\n\n          // the user just logged-in | the user was logged-in\n          dispatch({\n            type: \"SET_USER\",\n            user: authUser,\n          });\n        } else {\n          // the user is logged-out\n          dispatch({\n            type: \"SET_USER\",\n            user: null,\n          });\n        }\n      });\n    };\n    subscribe();\n  });\n\n  return <div className=\"App\">{user ? <Dashboard /> : <Home />}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"~@fortawesome/fontawesome-free/css/fontawesome.css\";\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { StateProvider } from \"./component/ContextProvider/StateProvider\";\nimport reducer, { initialState } from \"./component/ContextProvider/Reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}